@page "/client/{SessionId:guid}"
@using System.Collections.Immutable

<PartySessionPage SessionId="@SessionId">
    <h2>Currently Playing</h2>

    <TrackInfo Track="context.State.CurrentTrack?.TrackInfo" />

    <h2>Search & Add to Queue</h2>

    <EditForm Model="this" OnSubmit="() => OnSubmitSearch(context.Session)" Context="formContext">
        <div class="search-form">
            <InputText @bind-Value="searchText" />
            <button type="submit">
                <span class="icon">&#xE71E;</span> Search
            </button>
        </div>
    </EditForm>

    <TrackList Tracks="searchResults">
        <Actions Context="track">
            <button @onclick="() => context.Session.EnqueueTrackAsync(track)">
                <span class="icon">&#xE710;</span>
            </button>
        </Actions>
    </TrackList>
</PartySessionPage>

@code {
    private string searchText = "";
    private IReadOnlyList<FullTrack> searchResults = ImmutableList<FullTrack>.Empty;

    [Parameter]
    public Guid SessionId { get; set; }

    private async Task OnSubmitSearch(PartySession session)
    {
        searchResults = await session.SearchAsync(searchText);
    }
}